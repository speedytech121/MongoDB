MongoDB provides a variety of query operators to filter and manipulate data. Here is a comprehensive list of MongoDB query operators:

### Comparison Operators
- **$eq**: Matches values that are equal to a specified value.
- **$gt**: Matches values that are greater than a specified value.
- **$gte**: Matches values that are greater than or equal to a specified value.
- **$in**: Matches any of the values specified in an array.
- **$lt**: Matches values that are less than a specified value.
- **$lte**: Matches values that are less than or equal to a specified value.
- **$ne**: Matches all values that are not equal to a specified value.
- **$nin**: Matches none of the values specified in an array.

### Logical Operators
- **$and**: Joins query clauses with a logical AND returns all documents that match the conditions of both clauses.
- **$not**: Inverts the effect of a query expression and returns documents that do not match the query expression.
- **$nor**: Joins query clauses with a logical NOR returns all documents that fail to match both clauses.
- **$or**: Joins query clauses with a logical OR returns all documents that match the conditions of either clause.

### Element Operators
- **$exists**: Matches documents that have the specified field.
- **$type**: Selects documents if a field is of the specified type.

### Evaluation Operators
- **$expr**: Allows the use of aggregation expressions within the query language.
- **$jsonSchema**: Validates documents against the given JSON Schema.
- **$mod**: Performs a modulo operation on the value of a field and selects documents with a specified result.
- **$regex**: Selects documents where values match a specified regular expression.
- **$text**: Performs text search.
- **$where**: Matches documents that satisfy a JavaScript expression.

### Array Operators
- **$all**: Matches arrays that contain all elements specified in the query.
- **$elemMatch**: Selects documents if an element in the array field matches all the specified $elemMatch conditions.
- **$size**: Selects documents if the array field is a specified size.

### Bitwise Operators
- **$bitsAllClear**: Matches numeric or binary values in which a set of bit positions all have a value of 0.
- **$bitsAllSet**: Matches numeric or binary values in which a set of bit positions all have a value of 1.
- **$bitsAnyClear**: Matches numeric or binary values in which any bit from a set of bit positions has a value of 0.
- **$bitsAnySet**: Matches numeric or binary values in which any bit from a set of bit positions has a value of 1.

### Geospatial Query Operators
- **$geoIntersects**: Selects geometries that intersect with a specified GeoJSON object.
- **$geoWithin**: Selects geometries within a specified shape.
- **$near**: Returns geospatial objects in proximity to a point.
- **$nearSphere**: Returns geospatial objects in proximity to a point on a sphere.

### Projection Operators
- **$**: Projects the first element in an array that matches the query condition.
- **$elemMatch**: Projects the first element in an array that matches the specified $elemMatch condition.
- **$meta**: Projects the documentâ€™s score assigned during $text operation.
- **$slice**: Limits the number of elements projected from an array. Supports skip and limit slices.

### Miscellaneous Operators
- **$comment**: Adds a comment to a query.

These operators enable a wide range of powerful and flexible queries in MongoDB. You can combine these operators to construct complex queries to fetch and manipulate your data as required.